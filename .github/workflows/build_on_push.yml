name: continuous integration

on: [push, pull_request]

jobs:

  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Install package dependencies
        if:  startsWith( matrix.os, 'ubuntu' )
        run: |
          sudo apt-get update -y
          #sudo apt-get upgrade -y
          sudo apt-get install -y virtualenv gfortran nvidia-cuda-toolkit valgrind \
                                  libfmt-dev libspdlog-dev nlohmann-json3-dev \
                                  libgrpc++-dev protobuf-compiler-grpc

      - name: Install python test dependencies
        run: |
          virtualenv -p python3 "$HOME/venv"
          source "$HOME/venv/bin/activate"
          pip --version
          pip install --upgrade pip
          pip install lit pex pycodestyle
      - name: Configure
        run: |
          source "$HOME/venv/bin/activate"
          cmake -B "$HOME" -S "$GITHUB_WORKSPACE" -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCPACK_GENERATOR="TGZ;DEB"
      - name: Build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          source "$HOME/venv/bin/activate"
          cmake --build "$HOME"
