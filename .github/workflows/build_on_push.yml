name: continuous integration

on: [push, pull_request]

jobs:

  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Install package dependencies
        if:  startsWith( matrix.os, 'ubuntu' )
        run: |
          sudo apt-get update -y
          #sudo apt-get upgrade -y
          sudo apt-get install -y libc6-dev libgtest-dev virtualenv scons gfortran qt4-qmake nvidia-cuda-toolkit
      - name: Install python test dependencies
        run: |
          virtualenv "$HOME/venv"
          source "$HOME/venv/bin/activate"
          pip --version
          pip install --upgrade pip
          pip install lit pex pycodestyle
      - name: Install gtest
        if:  startsWith( matrix.os, 'ubuntu' )
        env:
          SRCDIR: "/usr/src/gtest"
        run: |
          mkdir gtest
          cd gtest
          cmake $SRCDIR
          make
          sudo cp *.a /usr/lib
      - name: Configure
        run: |
          source "$HOME/venv/bin/activate"
          cd $HOME
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCPACK_GENERATOR="TGZ;DEB" "$GITHUB_WORKSPACE"
      - name: Build
        run: |
          make -C $HOME all
      - name: Test
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          source "$HOME/venv/bin/activate"
          make -C $HOME test
      - name: Test package creation
        run: |
          make -C $HOME package
      - name: Test install
        env:
          DESTDIR: "$HOME/install"
        run: |
          mkdir -p $DESTDIR
          make -C $HOME install
